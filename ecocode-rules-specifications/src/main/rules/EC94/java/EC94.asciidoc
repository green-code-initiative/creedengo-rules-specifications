Parameter of orElse() is evaluated, even when having a non-empty Optional.

Supplier method of orElseGet passed as an argument is only executed when an Optional value isnâ€™t present.

Therefore, using orElseGet() will save computing time.

## Noncompliant Code Example

```java
Optional.of("ecoCode").orElse(getUnpredictedMethod());
```

## Compliant Code Example

```java
Optional.of("ecoCode").orElseGet(() -> getUnpredictedMethod());
```

```java
randomClass.orElse(getUnpredictedMethod());
```
