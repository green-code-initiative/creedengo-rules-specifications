PHP allows declaring a string with simple or double quotes. Using double quotes allows developers to insert variables which will be substituted during execution. When the string has no variables, using single quotes prevents PHP from searching for non-existent variables. It will save CPU cycles consumption and RAM usage.

## Noncompliant Code Example

```php
myFunction("name", "age", "IsStudent");
    $lastName = "Hugo";
    $concatenatedString = "$lastName is a student";
```

## Compliant Solution

```php
myFunction('name', 'age', 'IsStudent');
    $lastName = 'Hugo';
    $concatenatedString = $lastName . 'is a student';
```

include::../../etsdiff-methodology.asciidoc[]

## Case for a 1GB database:

image::https://live.staticflickr.com/65535/52621866212_de15608a41_o.png[ETSdiff percent comparison]

[format=csv,cols="1h,1,1"]
|===
Source of impacts,Compliant,Non-compliant

include::1GB.etsdiff.csv[]
|===
