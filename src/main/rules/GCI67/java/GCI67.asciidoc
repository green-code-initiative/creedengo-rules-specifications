The form `$i++` creates a temporary variable whereas `++$i` does not. It save CPU cycles.

== Non compliant Code Example

[source,java]
----
i++  // Noncompliant
----

== Compliant Solution

[source,java]
----
++i
----

## Exception
In some cases, it may be intentional to allow the use of `i++`, even if it is probably not far from a code smell.
Examples:

[source,java]
----
void bar(int value) {
    // ...
}

int foo() {
    int i = 0;
    bar(i++);
    return i;
}
----
or
[source,java]
----
private int i = 0;
int foo() {
    return this.i++;
}
---