name: Build and Tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '.github/**/*.yml'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read # allows SonarCloud to decorate PRs with analysis results
    outputs:
      ref_name: ${{ steps.set-vars.outputs.ref_name }}
      commit_sha: ${{ steps.set-vars.outputs.commit_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/classes

      - name: Set ref_name and commit_sha
        id: set-vars
        run: |
          echo "::set-output name=ref_name::${{ github.ref_name }}"
          echo "::set-output name=commit_sha::${{ github.sha }}"

  deploy-to-gh-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    # Execute this stage only for main and tags
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Define target_data_dir
        id: set-target-dir
        run: echo "target_data_dir=data/${{ needs.build.outputs.ref_name }}" >> $GITHUB_ENV

      - name: Remove old content
        run: |
          git clean -fd
          git reset --hard
          rm -rf "${{ env.target_data_dir }}"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: "${{ env.target_data_dir }}"

      - name: Generate data/index.json of all available already published versions
        run: |
          find data -name "index.json" | sort | while IFS= read -r indexJsonFile; do
            relative_path="$(echo "${indexJsonFile}" | sed -E 's,^data/,,')"
            jq --arg file "$relative_path" '.specification | {($file): {title: .title, version: .version, scmRevisionDate: .scmRevisionDate, scmRevisionNumber: .scmRevisionNumber}}' "$indexJsonFile"
          done | jq -s 'add' > data/index.json

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${{ env.target_data_dir }}" "data/index.json"
          git commit -m "Deploy ${{ env.target_data_dir }} to GitHub Pages" -m "(from #${{ needs.build.outputs.commit_sha }})"
          git push origin gh-pages
